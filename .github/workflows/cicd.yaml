name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install
      working-directory: ./app

    - name: Lint
      run: npm run lint
      working-directory: ./app

    - name: Build Docker image
      run: docker build -t hello-world ./app

    - name: Log in to Amazon ECR
      env:
        AWS_REGION: us-west-2
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

    - name: Tag Docker image
      id: image_tag
      env:
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      run: |
        IMAGE_TAG=$(date +%Y%m%d%H%M%S)
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
        docker tag hello-world:latest $AWS_ACCOUNT_ID.dkr.ecr.us-west-2.amazonaws.com/hello-world:$IMAGE_TAG

    - name: Push Docker image to Amazon ECR
      env:
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      run: docker push $AWS_ACCOUNT_ID.dkr.ecr.us-west-2.amazonaws.com/hello-world:${{ env.IMAGE_TAG }}

    - name: Deploy to ECS
      env:
        AWS_REGION: us-west-2
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        IMAGE_TAG: ${{ env.IMAGE_TAG }}
      run: |
        cd terraform
        terraform init
        terraform apply -auto-approve -var="image_tag=${IMAGE_TAG}"
